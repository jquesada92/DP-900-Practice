{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "sandbox2022dp900"
		},
		"ls_adls_covid_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_covid'"
		},
		"ls_datalake_covid_config_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_datalake_covid_config'"
		},
		"ls_adls_covid_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp900stgaccount.dfs.core.windows.net"
		},
		"ls_datalake_covid_config_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dp900stgaccount.dfs.core.windows.net"
		},
		"ls_ecdc_httpp_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{linkedService().sourceBaseURL}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_covid')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_covid_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_covid_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_datalake_covid_config')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_datalake_covid_config_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_datalake_covid_config_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_ecdc_httpp')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"sourceBaseURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_ecdc_httpp_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/config_ecdc_files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_datalake_covid_config",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ecdc_files_list.json",
						"folderPath": "config",
						"fileSystem": "covid"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceBaseURL": {
							"type": "string"
						},
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_datalake_covid_config')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataset_ecdc_http')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_ecdc_httpp",
					"type": "LinkedServiceReference",
					"parameters": {
						"sourceBaseURL": {
							"value": "@dataset().sourceURL",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"sourceURL": {
						"type": "string"
					},
					"relativeURL": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeURL",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_ecdc_httpp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_ecdc_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adls_covid",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sinkFileName": {
						"type": "string"
					},
					"root": {
						"type": "string"
					},
					"subfolder": {
						"type": "string",
						"defaultValue": "processed"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().sinkFileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().subfolder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().root",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FlowCasesDeaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_adls_covid",
								"type": "LinkedServiceReference"
							},
							"name": "srcCasesDeaths"
						},
						{
							"linkedService": {
								"referenceName": "ls_adls_covid",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_adls_covid",
								"type": "LinkedServiceReference"
							},
							"name": "sinkCasesDeaths"
						}
					],
					"transformations": [
						{
							"name": "ContinentEqEurope"
						},
						{
							"name": "pivotRateIndicator"
						},
						{
							"name": "pivotCountIndicator"
						},
						{
							"name": "MergePivotedData"
						},
						{
							"name": "Select1"
						},
						{
							"name": "TotalCasesDeathWeek"
						},
						{
							"name": "MapDrifted1",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "MapDrifted2",
							"description": "Creates an explicit mapping for each drifted column"
						},
						{
							"name": "Year"
						},
						{
							"name": "Lookup1"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tweekly_count as integer,\n\t\tyear_week as string,\n\t\trate_14_day as double,\n\t\tcumulative_count as integer,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'covid',\n\tfolderPath: 'raw/cases_deaths',\n\tfileName: 'cases_deaths.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionBy('hash', 1)) ~> srcCasesDeaths\nsource(output(\n\t\tCountry as string,\n\t\t{Alpha-2 code} as string,\n\t\t{Alpha-3 code} as string,\n\t\t{Country code} as short,\n\t\tNumeric as short,\n\t\tyear as string,\n\t\tPopulation as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'general',\n\tfolderPath: 'processed',\n\tfileName: 'PopulationByCountry.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionBy('hash', 1)) ~> source1\nSelect1 filter(equals(continent, 'Europe'),\n\tpartitionBy('hash', 1)) ~> ContinentEqEurope\nContinentEqEurope pivot(groupBy(year_week,\n\t\tcountry_code),\n\tpivotBy(indicator),\n\t{} = mean(rate_14_day),\n\tcolumnNaming: 'rate_$N$V',\n\tlateral: false) ~> pivotRateIndicator\nContinentEqEurope pivot(groupBy(year_week,\n\t\tcountry_code),\n\tpivotBy(indicator),\n\t{} = sum(weekly_count),\n\tcolumnNaming: 'weekly_count_$N$V',\n\tlateral: true,\n\tpartitionBy('hash', 1)) ~> pivotCountIndicator\nMapDrifted1, MapDrifted2 join(pivotCountIndicator@country_code == pivotRateIndicator@country_code\n\t&& pivotCountIndicator@year_week == pivotRateIndicator@year_week,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> MergePivotedData\nsrcCasesDeaths select(mapColumn(\n\t\tcountry_code,\n\t\tcontinent,\n\t\tindicator,\n\t\tweekly_count,\n\t\tyear_week,\n\t\trate_14_day,\n\t\tcumulative_count\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nMapDrifted1 aggregate(groupBy(year_week),\n\tweekly_count_cases = sum(weekly_count_cases),\n\t\tweekly_count_deaths = sum(weekly_count_deaths)) ~> TotalCasesDeathWeek\npivotCountIndicator derive(weekly_count_cases = toLong(byName('weekly_count_cases')),\n\t\tweekly_count_deaths = toLong(byName('weekly_count_deaths')),\n\tpartitionBy('hash', 1)) ~> MapDrifted1\npivotRateIndicator derive(rate_cases = toDouble(byName('rate_cases')),\n\t\trate_deaths = toDouble(byName('rate_deaths'))) ~> MapDrifted2\nMergePivotedData derive(year = split(pivotCountIndicator@year_week,\"-\")[1]) ~> Year\nYear, source1 lookup(Year@year == source1@year\n\t&& pivotCountIndicator@country_code == {Alpha-3 code},\n\tmultiple: true,\n\tbroadcast: 'auto')~> Lookup1\nLookup1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'covid',\n\tfolderPath: 'processed/cases_deaths',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['cases_deaths.csv'],\n\tumask: 0222,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sinkCasesDeaths"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PopulationByCountry')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_adls_covid",
								"type": "LinkedServiceReference"
							},
							"name": "srcPopulation"
						},
						{
							"linkedService": {
								"referenceName": "ls_adls_covid",
								"type": "LinkedServiceReference"
							},
							"name": "srcCountryCode"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_adls_covid",
								"type": "LinkedServiceReference"
							},
							"name": "SaveProcessed"
						}
					],
					"transformations": [
						{
							"name": "GetOnlyCountries"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Unpivot1"
						},
						{
							"name": "SelecKeyAndYears"
						},
						{
							"name": "RemoveFirstCol"
						}
					],
					"script": "source(output(\n\t\tIndex as short,\n\t\tVariant as string,\n\t\t{Region, subregion, country or area *} as string,\n\t\tNotes as string,\n\t\t{Country code} as short,\n\t\tType as string,\n\t\t{Parent code} as short,\n\t\t{1950} as string,\n\t\t{1951} as string,\n\t\t{1952} as string,\n\t\t{1953} as string,\n\t\t{1954} as string,\n\t\t{1955} as string,\n\t\t{1956} as string,\n\t\t{1957} as string,\n\t\t{1958} as string,\n\t\t{1959} as string,\n\t\t{1960} as string,\n\t\t{1961} as string,\n\t\t{1962} as string,\n\t\t{1963} as string,\n\t\t{1964} as string,\n\t\t{1965} as string,\n\t\t{1966} as string,\n\t\t{1967} as string,\n\t\t{1968} as string,\n\t\t{1969} as string,\n\t\t{1970} as string,\n\t\t{1971} as string,\n\t\t{1972} as string,\n\t\t{1973} as string,\n\t\t{1974} as string,\n\t\t{1975} as string,\n\t\t{1976} as string,\n\t\t{1977} as string,\n\t\t{1978} as string,\n\t\t{1979} as string,\n\t\t{1980} as string,\n\t\t{1981} as string,\n\t\t{1982} as string,\n\t\t{1983} as string,\n\t\t{1984} as string,\n\t\t{1985} as string,\n\t\t{1986} as string,\n\t\t{1987} as string,\n\t\t{1988} as string,\n\t\t{1989} as string,\n\t\t{1990} as string,\n\t\t{1991} as string,\n\t\t{1992} as string,\n\t\t{1993} as string,\n\t\t{1994} as string,\n\t\t{1995} as string,\n\t\t{1996} as string,\n\t\t{1997} as string,\n\t\t{1998} as string,\n\t\t{1999} as string,\n\t\t{2000} as string,\n\t\t{2001} as string,\n\t\t{2002} as string,\n\t\t{2003} as string,\n\t\t{2004} as string,\n\t\t{2005} as string,\n\t\t{2006} as string,\n\t\t{2007} as string,\n\t\t{2008} as string,\n\t\t{2009} as string,\n\t\t{2010} as string,\n\t\t{2011} as string,\n\t\t{2012} as string,\n\t\t{2013} as string,\n\t\t{2014} as string,\n\t\t{2015} as string,\n\t\t{2016} as string,\n\t\t{2017} as string,\n\t\t{2018} as string,\n\t\t{2019} as string,\n\t\t{2020} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'excel',\n\tfileSystem: 'general',\n\tfolderPath: 'raw',\n\tfileName: 'Population.xlsx',\n\tsheetName: 'ESTIMATES',\n\trange: 'A17:BZ999',\n\tfirstRowAsHeader: true,\n\tpreferredFractionalType: 'decimal',\n\tpartitionBy('hash', 1)) ~> srcPopulation\nsource(output(\n\t\t{_c0} as short,\n\t\tCountry as string,\n\t\t{Alpha-2 code} as string,\n\t\t{Alpha-3 code} as string,\n\t\tNumeric as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'general',\n\tfileName: 'country_codes.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionBy('hash', 1)) ~> srcCountryCode\nsrcPopulation filter(equals(Type, \"Country/Area\")) ~> GetOnlyCountries\nRemoveFirstCol, SelecKeyAndYears join(Numeric == {Country code},\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 unpivot(output(\n\t\tyear as string,\n\t\tPopulation as string\n\t),\n\tungroupBy(Country,\n\t\t{Alpha-2 code},\n\t\t{Alpha-3 code},\n\t\t{Country code},\n\t\tNumeric),\n\tlateral: false,\n\tignoreNullPivots: true) ~> Unpivot1\nGetOnlyCountries select(mapColumn(\n\t\t{Country code},\n\t\teach(patternMatch(`\\d+`, true()))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelecKeyAndYears\nsrcCountryCode select(mapColumn(\n\t\tCountry,\n\t\t{Alpha-2 code},\n\t\t{Alpha-3 code},\n\t\tNumeric\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveFirstCol\nUnpivot1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delimited',\n\tfileSystem: 'general',\n\tfolderPath: 'processed',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true,\n\tpartitionFileNames:['PopulationByCountry.csv'],\n\tumask: 0222,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> SaveProcessed"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adls_covid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Covid')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Save Files to Raw Folder",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "config_ecdc_files",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Save Files to Raw Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Save Files to Raw Folder').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data from URL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "dataset_ecdc_http",
											"type": "DatasetReference",
											"parameters": {
												"sourceURL": {
													"value": "@item().sourceBaseURL",
													"type": "Expression"
												},
												"relativeURL": {
													"value": "@item().sourceRelativeURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_ecdc_data",
											"type": "DatasetReference",
											"parameters": {
												"sinkFileName": "@item().sinkFileName",
												"root": "@item().root",
												"subfolder": "raw"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "PopulationByCountry",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PopulationByCountry",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcPopulation": {},
									"srcCountryCode": {},
									"SaveProcessed": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "FlowCasesDeaths",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "PopulationByCountry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FlowCasesDeaths",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcCasesDeaths": {},
									"source1": {},
									"sinkCasesDeaths": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-01-05T04:45:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/config_ecdc_files')]",
				"[concat(variables('factoryId'), '/dataflows/PopulationByCountry')]",
				"[concat(variables('factoryId'), '/dataflows/FlowCasesDeaths')]",
				"[concat(variables('factoryId'), '/datasets/dataset_ecdc_http')]",
				"[concat(variables('factoryId'), '/datasets/ds_ecdc_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Covid",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-01-05T04:43:00",
						"timeZone": "SA Pacific Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Covid')]"
			]
		}
	]
}